{"$schema": "http://json-schema.org/schema#", "$schemaVersion": "0.0.1", "modelTags": "GSMA", "$id": "https://smart-data-models.github.io/GSMA/Market-Price-Forecast/schema.json", "title": "Smart Data models - Market-Price-Forecast schema", "description": "A description of a Market-Price-Forecast", "type": "object", "allOf": [{"$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"}, {"$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"}, {"properties": {"type": {"type": "string", "description": "Property. NGSI Entity identifier. It has to be Market-Price-Forecast"}, "enum": ["Market-Price-Forecast"], "createdAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/ time that the instance of the entity was created in ISO 8601 format. The value of this will be set by the server when the entity was created."}, "modifiedAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/ time when the entity was last modified in ISO 8601 format. The value of this will be set by the server when the entity was modified, if the entity has not been modified it may have a null value."}, "entityVersion": {"type": "string", "description": "Property. The entity specification version as a number. A version number of 2.0 or later denotes the entity is represented using NGSI-LD"}, "uav": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the UAV entity to which this event relates."}, "observedAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time when the content was obtained."}, "originatedByUAV": {"type": "string", "description": "Property. A logical indicator of source of the message. True indicates it is the UAV itself, false indicates that it is a different source, a listening station software application or a different UAV."}, "originator": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Refers to a third party UAV instance or other entity (e.g. listening station) that reported the information in the case the event was not directly originated by the UAV."}, "flightMessage": {"type": "string", "description": "Property. A flight message describing the current flight status encoded as a Global UTM Message encoded as a JSON object. https://bitbucket.org/global_utm/flight-declaration-protocol"}, "dateObserved": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time the observation was recorded.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **observedAt**"}, "fleetVehicle": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the FleetVehicle entity to which this operation relates."}, "fleetVehicleOperation": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the FleetVehicleOperation entity to which this status entity relates."}, "restFuelAmount": {"type": "string", "description": "Property. The level of fuel recorded when the vehicle was last at rest (i.e. stopped). The timestamp element of the attribute should indicate when the vehicle was last at rest. Data to be recorded in Litres."}, "lastFuellingAmount": {"type": "string", "description": "Property. The level of fuel added to the vehicle at the last fuelling. The timestamp element of the attribute should indicate when the vehicle was fuelled. Data tobe recorded in Litres."}, "currentStatus": {"type": "string", "description": "Property. A description of the current status of the vehicle e.g. deployed, finished, terminated, servicing, starting"}, "currentOperative": {"type": "string", "description": "Property. The current operative (e.g. driver) of the vehicle described as a Schema.org "person". https://schema.org/Person"}, "speed": {"type": "string", "description": "Property. The current speed of the fleet vehicle (km/h). The timestamp element of the attribute should indicate when the reading was obtained."}, "bearing": {"type": "string", "description": "Property. The current bearing of the fleet vehicle in degrees relative to North. The timestamp element of the attribute should indicate when the reading was obtained."}, "lastKnownPosition": {"$ref": "https://github.com/smart-data-models/data-models/blob/master/common-schema.json#/definitions/Location-Commons/properties/location"}, "lastKnownPositionUpdatedAt": {"type": "string", "format": "date-time", "description": "Property. The timestamp of the last known position update for the fleet vehicle."}, "inRestrictedArea": {"type": "string", "description": "Property. Indicates if the vehicle is known to be in a restricted area at the time of the status update."}, "mileageFromOdometer": {"type": "string", "description": "Property. The total distance the fleet vehicle has travelled according to the on-board odometer in kilometres (unitCode KMT) or miles (unitCode SMI). See also Schema.org Vehicle/ mileageFromOdometer. The timestamp element records when the odometer reading was taken."}, "lastKnownPositionUpdate": {"type": "string", "format": "date-time", "description": "Property. The timestamp of the last known position update for the fleet vehicle.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **lastKnownPositionUpdatedAt**"}, "validationResult": {"type": "string", "description": "Property. A logical indicator of validation of the message. True indicates it is the validation is confirmed, false indicates that the validation confirmation fails."}, "flightControlPolicy": {"type": "string", "description": "Property. Indicates the flight control policy generated by the service provider. This data could be included as a text value or referenced by a URI (URL/URN) to a policy defined in JSON or XML format."}, "entity": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the entity this price forecast relates to e.g. an AgriProduct entity."}, "priceAverage5Year": {"type": "string", "description": "Property. The five year average market price observed represented using schema.org PriceSpecification attributes http://schema.org/PriceSpecification"}, "priceObserved": {"type": "string", "description": "Property. The market price observed represented using schema.org PriceSpecification attributes http://schema.org/PriceSpecification"}, "marketScale": {"type": "string", "description": "Property. Unique code assigned to market scale type. The content includes both a name and a value."}, "weatherForecast": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to a related weather forecast record"}, "device": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the IoT device (such as a CCTV camera or microphone) which generated the data."}, "operationType": {"type": "string", "description": "Property. Defines the type of operation conducted/ requested. This will be one of a defined list of operation types specific to the machine/ machineModel.Including: **process, setup，maintenance, repair，breakdown.**The list of operation types highly depends on the machine model."}, "result": {"type": "string", "description": "Property. The result of the operation. One of **ok, success, suspended, aborted, failed.**"}, "plannedStartAt": {"type": "string", "format": "date-time", "description": "Property. The planned start date/timestamp for the operation. Note that this is advisory and the actual time the operation starts may be before or after the planned start."}, "plannedEndAt": {"type": "string", "format": "date-time", "description": "Property. The planned end date/timestamp for the operation. Note that this is advisory and the actual time the operation finishes may be before or after the planned end."}, "status": {"type": "string", "description": "Property. A choice from an enumerated list describing the status. One of: **planned, ongoing, finished, scheduled, cancelled.**"}, "operator": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the operator conducting the operation"}, "startedAt": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the operation actually started to be performed."}, "endedAt": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the operation actually finished."}, "reportedAt": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the event/ fault was reported."}, "addressedAt": {"type": "string", "format": "date-time", "description": "Property. The timestamp when an event or fault was addressed or cleared."}, "startDate": {"type": "string", "format": "date-time", "description": "Property. The start timestamp for the corresponding subscription service.Note that this is advisory and the actual time the operation starts may be before or after the planned start.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **startAt**"}, "endDate": {"type": "string", "format": "date-time", "description": "Property. The end timestamp for the corresponding subscription service.Note that this is advisory and the actual time the operation finishes may be before or after the planned end.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **endAt**"}, "dateStarted": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the operation actually started to be performed.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **startedAt**"}, "dateFinished": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the operation actually finished.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **endedAt**"}, "dateReported": {"type": "string", "format": "date-time", "description": "Property. Timestamp when the event/ fault was reported.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **reportedAt**"}, "dateAddressed": {"type": "string", "format": "date-time", "description": "Property. The timestamp when an event or fault was addressed or cleared.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **addressedAt**"}, "uavModel": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the UAV Model definition which describes the UAV in more detail."}, "operationMode": {"type": "string", "description": "Property. Text describing the choice from "vlos", "evlos", "bvlos", "automated"Note: descriptions align with UTM Flight message."}, "elevation": {"type": "string", "description": "Property. The elevation of the UAV (relative to ground level at the specified location). Specify value and units of measure."}, "flightStatus": {"type": "string", "description": "Property. The flight status of the UAV, including: **stop, takeoff, flight, hover, land**"}, "workStatus": {"type": "string", "description": "Property. The work status of the UAV, including: **stop, prepare, work, finish**"}, "groundSpeed": {"type": "string", "description": "Property. The latest reported ground speed of the UAV. Specify value and units of measure"}, "fuel": {"type": "string", "description": "Property. Current fuel load of the UAV. Specify value and units of measure"}, "vehicle": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the vehicle entity which this fault relates to."}, "fleetVehicleType": {"type": "string", "description": "Property. The type of the Vehicle for example (not limited to): **Taxi, Ambulance, Postal, Fire & Rescue, Delivery.**"}, "operatingCompany": {"type": "string", "description": "Property. Details of the organization that is operating this fleet vehicle. Based on Schema.org "organization": https://schema.org/Organization"}, "smartMeter": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the Smart Meter that this observation relates to."}, "totalConsumption": {"type": "string", "description": "Property. The total amount of product supplied as recorded by the meter since installation. The relevant unitCode should be specified such as KWH (Kilo Watt Hours) for Electricity, LTR (Litre) or MTQ (Cubic Metre) for gases or liquids."}, "photo": {"type": "string", "description": "Property. A picture of the meter installation. Comprises the text string encoded from the binary data of a JPEG format photo of the meter. The binary data must be converted to ASCII text using the base64 encoding standard."}, "peakConsumption": {"type": "string", "description": "Property. The total amount of product supplied during "peak" hours (particularly relevant to Electricity supply) as recorded by the meter since installation. The relevant unitCode should be specified such as KWH (Kilo Watt Hours) for Electricity, LTR (Litre) or MTQ (Cubic Metre) for gases or liquids."}, "offPeakConsumption": {"type": "string", "description": "Property. The total amount of product supplied during "off-peak" hours (particularly relevant to Electricity supply) as recorded by the meter since installation. The relevant unitCode should be specified such as KWH (Kilo Watt Hours) for Electricity, LTR (Litre) or MTQ (Cubic Metre) for gases or liquids."}, "powerFactor": {"type": "string", "description": "Property. Relevant to 3-Phase electricity supplies often used in industry - the power factor ranges from -1 to +1 depending on the net balance between capacitive and inductive loads. If used this measures the average power factor since meter installation."}, "place": {"type": "string", "description": "Property. Alternate specification of the installation location for a fixed position Smart Meter"}, "productType": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Refers to the relevant ProductType record that this entity is associated with."}, "supplierName": {"type": "string", "description": "Property. The name of the supplier of this product."}, "gtin": {"type": "string", "description": "Property. GS1 product code.A Global Trade Item Number (GTIN) is the 14 digit GS1 Identification Key used to identify products.See http://www.gs1.org/gtin for more details."}, "gpcCategoryCode": {"type": "string", "description": "Property. Product category code8-digit code (GPC "Brick Value") specifying a product category according to the GS1 Global Product Classification (GPC) standard.For more information see http://www.gs1.org/gpc"}, "productName": {"type": "string", "description": "Property. The name of this product."}, "brand": {"type": "string", "description": "Property. The brand name for this product."}, "inPackageWidth": {"type": "string", "description": "Property. The width of the product in the package, as measured according to the GS1 Package Measurement Rules. See http://www.gs1.org/package-measurement-rules-implementation-guide for more details."}, "inPackageDepth": {"type": "string", "description": "Property. The depth of the product in the package, as measured according to the GS1 Package Measurement Rules. See http://www.gs1.org/package-measurement-rules-implementation-guide for more details."}, "inPackageHeight": {"type": "string", "description": "Property. The height of the product in the package, as measured according to the GS1 Package Measurement Rules. See http://www.gs1.org/package-measurement-rules-implementation-guide for more details."}, "netWeight": {"type": "string", "description": "Property. Weight of the Agri-Product itself in a package with GS1 code"}, "grossWeight": {"type": "string", "description": "Property. Used to identify the gross weight of the product. The gross weight includes all packaging materials of the product. At pallet level the gross weight includes the weight of the pallet itself. For example, 200 GRM, value - total pounds, total grams, etc."}, "countryOfOrigin": {"type": "string", "description": "Property. Country where the product was manufactured, harvested, mined etc. Code indicating the country of origin of the product."}, "images": {"type": "string", "description": "Property. List of URIs (URNs/URLs) of images of the product."}, "producerURI": {"type": "string", "description": "Property. URI (URL/URN) to the producer of the product"}, "manufacturer": {"type": "string", "description": "Property. The manufacturer’s identifier."}, "POIs": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to associated Points of Interest (e.g. monitoring stations) that the associated observations are related to."}, "devices": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the IoT devices (i.e. sensors) which generated the water quality observations."}, "depth": {"type": "string", "description": "Property. Depth below surface level where the observation was taken, nominally in metres."}, "pressure": {"type": "string", "description": "Property. Hydrostatic pressure where the observation was taken, nominally in Hector Pascals."}, "conductivity": {"type": "string", "description": "Property. Electrical conductivity, nominally in Siemens/metre."}, "conductance": {"type": "string", "description": "Property. Specific conductivity at 25 degrees Celsius, nominally in Siemens/metre."}, "temperature": {"type": "string", "description": "Property. The observed local air temperature nominally in degrees centigrade."}, "tss": {"type": "string", "description": "Property. Total suspended solids."}, "tds": {"type": "string", "description": "Property. Total dissolved solids."}, "turbidity": {"type": "string", "description": "Property. Amount of light scattered by particles in the water column."}, "salinity": {"type": "string", "description": "Property. Derived from the conductivity measurement, nominally reported as parts per thousand."}, "pH": {"type": "string", "description": "Property. pH measurement (typically a number between 0 and 14)."}, "orp": {"type": "string", "description": "Property. Oxidation-Reduction potential, nominally reported as milli-volts (mV)."}, "cdom": {"type": "string", "description": "Property. Color dissolved organic matter."}, "Chla": {"type": "string", "description": "Property. Concentration of chlorophyll A."}, "Cl": {"type": "string", "description": "Property. Concentration of chlorides."}, "CO": {"type": "string", "description": "Property. The level of free non-compound carbon monoxide present. ("}, "CO2": {"type": "string", "description": "Property. The level of free non-compound carbon dioxide present."}, "Hg": {"type": "string", "description": "Property. The level of compound mercury present."}, "NH3": {"type": "string", "description": "Property. Concentration of free ammonia."}, "NH4": {"type": "string", "description": "Property. Concentration of ammonium (ions)."}, "NO3": {"type": "string", "description": "Property. Concentration of nitrates."}, "O2": {"type": "string", "description": "Property. The level of gaseous oxygen (O2) present in the atmosphere as measured around the product."}, "PC": {"type": "string", "description": "Property. Concentration of pigment phycocyanin which can be measured to estimate cyanobacteria concentrations specifically."}, "PE": {"type": "string", "description": "Property. Concentration of pigment phycoerythrin which can be measured to estimate cyanobacteria concentrations specifically."}, "stateVector": {"type": "string", "description": "Property. A state vector describing the current flight status based on the definition of opensky-network.org StateVector and encoded in JSON."}, "eventType": {"type": "string", "description": "Property. The type of the UAV event, a choice from: **illegal flight , close to unpermitted airspace, overspeed, over height, illegal work**"}, "processingType": {"type": "string", "description": "Property. Indicates how the fault was dealt with, e.g. **systemHandled**, or not present if the issue has not been resolved."}, "resolvedAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time at which the issue was solved, or not present if the issue has not been resolved."}, "dtCode": {"type": "string", "description": "Property. DTC or Diagnostic Trouble Codes are codes generated by the vehicle"s computer diagnostic system. These may be manufacturer, equipment or vehicle specific."}, "faultLog": {"type": "string", "description": "Property. Free text that records information about the initial fault incident, ongoing updates and fault resolution."}, "dateIdentified": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time the fault was detected or identified.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **observedAt**"}, "dateProcessed": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time at which the issue was solved, or not present if the issue has not been resolved.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **resolvedAt**"}, "meterType": {"type": "string", "description": "Property. The type of supply being metered e.g.: **Electricity, Gasoline, Water, Methane, Diesel.**"}, "root": {"type": "string", "description": "Property. A logical indicator that this MachineModel is the root of a MachineModel hierarchy. True indicates it is the root, false indicates that it is not the root."}, "buildingTypeParent": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. References any higher level Building Type entities that this type is based on."}, "buildingTypeChildren": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to child building types i.e. immediately below this entity in the hierarchy."}, "weatherObserved": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to associated WeatherObserved entities."}, "airQualityObserved": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to associated AirQualityObserved entities."}, "waterQualityObserved": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to associated WaterQualityObserved entities."}, "recogniserInput": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the Recogniser Input that this result is related to."}, "processedAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time when the processing completed."}, "processedDuration": {"type": "string", "format": "date-time", "description": "Property. Indicates the elapsed time required to process the input (in hours, minutes and seconds)."}, "parentType": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the parent product type i.e. immediately above the entity in the hierarchy."}, "childrenTypes": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to child product types i.e. immediately below this entity in the hierarchy."}, "product": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the Product to which this record relates."}, "relativeHumidity": {"type": "string", "description": "Property. Relative Humidity a number between 0 and 1 representing the range of 0% to 100%0 ≤ relativeHumidity ≤ 1"}, "atmosphericPressure": {"type": "string", "description": "Property. Atmospheric Pressure nominally in units of hecto Pascals"}, "weight": {"type": "string", "description": "Property. Current (i.e. measured) weight of the product including packaging. This may differ from the original weight due to additional packaging or losses during shipment e.g. evaporation"}, "volume": {"type": "string", "description": "Property. The current volume of the product including packaging."}, "softwareApplication": {"type": "string", "description": "Property. Details about the software application using the Schema.org definition https://schema.org/SoftwareApplication"}, "operationalInstance": {"type": "string", "description": "Property. URL linking to an operational instance (assumed to be web based) for the UAV Traffic Management Software."}, "model": {"type": "string", "description": "Property. The vehicle model identifier."}, "doc": {"type": "string", "description": "Property. Reference to data sheet or other manufacturer’s documentation about this MachineModel."}, "manufacturerName": {"type": "string", "description": "Property. The name of manufacturer of this MachineModel."}, "brandName": {"type": "string", "description": "Property. The brand name of this MachineModel."}, "category": {"type": "string", "description": "Property. The category of subscription. One selection from an enumerated list including: **prepay, postpay, utility, broadband, electric, gas, heat, water, landline, mobile, tv, security, financial, energy management, other.**"}, "rotors": {"type": "string", "description": "Property. The number of the rotors of the UAVModel."}, "fuelType": {"type": "string", "description": "Property. The fuel type powering the UAVModel. A choice from an enumerated list describing the power source. One of: **gasoline, petrol(unleaded), petrol(leaded), petrol, diesel, electric, hydrogen, lpg autogas, cng, biodiesel, ethanol, hybrid electric/petrol, hybrid electric/diesel, other**"}, "maxFlightTime": {"type": "string", "description": "Property. The maximum duration of flight of the UAVModel with full fuel and no load. Specify value and units of measure."}, "maxFlightAltitude": {"type": "string", "description": "Property. The maximum flight altitude of the UAVModel above ground. Specify value and units of measure."}, "maxGroundVelocity": {"type": "string", "description": "Property. The maximum ground velocity of the UAVModel (under still wind conditions). Specify value and units of measure."}, "minWeight": {"type": "string", "description": "Property. The weight of the UAV without fuel or load. Specify value and units of measure."}, "minUnladenWeight": {"type": "string", "description": "Property. The weight of the UAV with full fuel but no load. Specify value and units of measure."}, "maxLoad": {"type": "string", "description": "Property. The maximum load that the UAV is permitted to transport. Specify value and units of measure."}, "UAVADSBroadcast": {"type": "string", "description": "Property. A flight message describing the current flight status as a DBSB Message stored as a string of hexadecimal digits."}, "fleetVehicleStatus": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the FleetVehicleStatus entity to which this operation relates - this contains the real-time status information"}, "initiatingLocation": {"$ref": "https://github.com/smart-data-models/data-models/blob/master/common-schema.json#/definitions/Location-Commons/properties/location"}, "responseTime": {"type": "string", "description": "Property. Indicates the time to respond to an event, in seconds. The associated observedAt timestamp indicates when the last update was recorded. E.g. records the response time for an ambulance to reach to a patient."}, "transportTime": {"type": "string", "description": "Property. Indicates the time that the fleet vehicle has spent transporting people or supplies for the current operation. E.g. indicates the time an ambulance spent transporting a patient to a hospital emergency department."}, "eventStart": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time of when the event started.Note that this is advisory and the actual time the operation starts may be before or after the planned start.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **startAt**"}, "eventEnd": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time of when the event ended (if it has ended).Note that this is advisory and the actual time the operation finishes may be before or after the planned end.Note this field was defined for use with NGSIv2 and is now deprecated. For new entities and applications replace with **endAt**"}, "contentType": {"type": "string", "description": "Property. The IETF MIME format of the source content being provided"}, "mediaUri": {"type": "string", "description": "Property. The media content referenced by a URI.Either mediaEncoded or mediaUri should be provided but not both, if both are provided mediaUri should be prioritised."}, "mediaEncoded": {"type": "string", "description": "Property. The media content, generally encoded from binary source data e.g. a JPEG format photo to produce ASCII format text. The binary data must be converted to ASCII text using the base64 encoding standard.Either mediaEncoded or mediaUri should be provided but not both, if both are provided mediaUri should be prioritised."}, "observedLocation": {"$ref": "https://github.com/smart-data-models/data-models/blob/master/common-schema.json#/definitions/Location-Commons/properties/location"}, "metadata": {"type": "string", "description": "Property. Any additional metadata that accompanies the content source, provided as key/value pairs."}, "offer": {"type": "string", "description": "Property. Encoded as Schema.org offer. https://schema.org/Offer"}, "machine": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. A reference to the associated Machine for this machine operation."}, "commandSequence": {"type": "string", "description": "Property. The command sequence executed/ requested for the machine in a representation format relevant to the machine."}, "operationOutput": {"type": "string", "description": "Property. A custom property describing the output data of the operation. The schema of the output highly depends the machine model."}, "version": {"type": "string", "description": "Property. The manufacturer defined version number for the machine model."}, "machineModelParent": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. References any higher level MachineModel that this machine model is based on."}, "machineModelChildren": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. References any lower level MachineModel entities that are based on this machine model."}, "processDescription": {"type": "string", "description": "Property. A description of the industrial process carried out by this machine."}, "standardOperations": {"type": "string", "description": "Property. Lists the standard set of operations supported by this machineModel."}, "input": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the input that was used to develop this result, this would usually be a "RecogniserInput" for a direct source or a "RecogniserOutput" in the case that a previous stage of recognition is being used."}, "recognisedFeatures": {"type": "string", "description": "Property. The "features" that were recognised from the input data. This should be an array of objects representing the output from the recognition process, though the contents of each result object will be specific to the recognition process. The actual contents of this will depend on the design of the recognition engine. See additional notes below."}, "subscription": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. Reference to the associated service subscription"}, "startAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time of when the event started."}, "endAt": {"type": "string", "format": "date-time", "description": "Property. Indicates the date/time of when the event ended (if it has ended)."}, "users": {"anyOf": [{"type": "string", "minLength": 1, "maxLength": 256, "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", "description": "Property. Identifier format of any NGSI entity"}, {"type": "string", "format": "uri", "description": "Property. Identifier format of any NGSI entity"}], "description": "Relationship. References to those persons or organisations that will be using the subscription."}, "eventResult": {"type": "string", "description": "Property. The handling result of the event, a choice from: **logged, notify, alarm, force land, force back, force hover**"}, "priceForecast": {"type": "string", "description": "Property. The market price forecast represented using schema.org PriceSpecification attributes http://schema.org/PriceSpecification"}}}]}